#include <stdio.h>

void print_bin(long unsigned int a, int size) //функция вывода на экран числа в двоичном виде
{
	for (int i = size * 8; i > 0; i--)
		printf("%d", (a & (1 << (i - 1))) ? 1 : 0); //a?b:c - Терна́рная усло́вная опера́ция (аналог - условная дизъюнкция, загугли)
													//т.е. если (a & (1 << (i - 1))) отлично от нуля, то выводим 1, иначе - 0
	printf("\n");
}

int main(void)
{
	unsigned long N; // исходное число
	unsigned long mask = 0; // маска

	printf("N = ");
	scanf_s("%x", &N); // ввод в шестнадцатиричном формате
	print_bin(N, sizeof(N)); //вывод на экран двоичного N
	int i = sizeof(N) * 8; // вычисляем количество бит в зависимости от размера N в байтах
	while ((N & (1 << (i - 1))) == 0 && i > 0) //цикл с предусловием: пока N & (единица, сдвинутая на i-1 разрядов влево) равно 0, и i > 0
	{
		i--;								   //уменьшаем i, такми образом мы будем уменьшать i до тех пор, пока не встретим первую 1 слева
	}										   //когда встретим первую 1 слева, мы получим в i её номер справа
	mask = 1 << (i - 1); //формируем маску, сдвигая 1 на i-1 разрядов
	N = N & mask; //обнуляем разряды согласно маске
	printf("result: %x\n", N);
	print_bin(N, sizeof(N)); //вывод на экран двоичного N
	getchar();
	return 0;
}
