#include <iostream>
#include <conio.h>
#include <stdio.h>

int main()
{
	system("cls");
	printf_s("Vvedite stroku:\n");
	char string[1000]; //рабочая строка для запоминания введенных символов
	string[0] = '\n'; //обнуляем рабоч строку, т.е присваиваем первому символу символ конца строки
	int i = 0; //переменная для движения по рабочей строке
	int j = 0; //переменная для движения по рабочей строке от предыдущего пробела (внутри рабочего слова)
	int bs = -1; //индекс последнего обнаруженного пробела в строке, для начала будем считать, что он стоит на -1 позиции (виртуально)
	int count = 0; //переменная для подсчета нужных слов, изначально равна 0
	char flag = 0; //флаг для фиксации обнаружения совпадения символов в слове, изначально равен 0 (FALSE), т.е. пока мы ничего не нашли
	char bukva = 0; //флаг для определения наличия хотя бы одной буквы в слове, чтобы понять считать нам все слово или нет
	fgets(string, 1000, stdin); //считывание строки до нажатия клавиши Enter
	do //основной цикл прохода всей строки до символа конца строки
	{
		if (string[i] > 57 || string[i] < 0) bukva = 1; //если встретили букву, то запомним этот факт
		if (string[i] > 57 || string[i] < 0 || string[i] == '\n' || string[i] == 32) //если текущий символ буква ИЛИ конец сроки ИЛИ пробел
		{
			if ((string[i] == ' ' || string[i] == '\n') && string[i - 1] != ' ') //если текущий символ Пробел ИЛИ Enter, И предыдущий символ НЕ Пробел, то мы встретили конец слова
			{
				if (!flag && bukva) //если не нашли ни одного повторения символов в рабочем слове И встретилась хоть одна буква
					count++; //увеличиваем количество слов с неповторяющимися символами
				flag = 0; //сбрасываем флаг независимо от того, нашли или не нашли, т.к. слово закончилось и мы ждем нового
				bukva = 0; //сбрасываем флаг наличия буквы в слове
			}
			else if (string[i] != ' ' && (i - bs) > 1) //если же текущий символ не пробел и предыдущий символ не пробел (нет смысла начинать сравнение с первой буквы в слове
			{																											//и сравнивать ее с собой же, начнем на следующем шаге цикла со второй
				j = bs + 1; //начинаем просмотр с позиции, следующей за последним обнаруженным пробелом
				do //внутренний цикл просмотра слова с позиции, следующей за последним обнаруженным пробелом, до текущей позиции i
				{
					if (string[j] == string[i] && (string[j] > 57 || string[j] < 0) && (string[i] > 57 || string[i] < 0)) flag = 1; //если символ совпадает с текущим символом основного цикла и оба НЕ цифры, то устанавливаем флаг
					j++;  //следующий символ рабочего слова
				} while (j != i); //пока индекс символа рабочего слова не сравняется с текущим индексом основного цикла i
			}
		}
		if (string[i] == ' ') bs = i; //если текущий символ Пробел, запомним его позицию
		i++;
	} while (string[i - 1] != '\n'); //пока не встретим символ конца строки
	putchar('\n'); //перевод курсора на другую строку
	printf("Kolichestvo slov: %d\n", count); //вывод результата
	system("pause"); //ждем нажатия любой кнопки
	return 0;
}

