#include <stdio.h>
#include <iostream>
#include <conio.h>

int main()
{
	system("cls"); //очистка экрана
  printf_s("Enter the string:\n"); 
	char symbol; //переменная для хранения введенного символа
	char prev_symbol=' '; //переменная для хранения предыдущего введенного символа (для обнаружения нескольких пробелов)
	char string[50]; //рабочее слово для запоминания введенных символов до ввода Пробела или Enter (макс. длина 50)
	string[0] = '\0'; //обнуляем рабочее слово, т.е присваиваем первому символу символ конца строки
	int i; //переменная для движения по рабочему слову
	int count = 0; //переменная для подсчета нужных слов, изначально равна 0
	bool flag = 0; //флаг для фиксации обнаружения совпадения символов в слове, изначально равен 0 (FALSE), т.е. пока мы ничего не нашли
	do
	{
		symbol = _getch(); //считывание символа на лету, т.е. не ждем нажатия клавиши Enter
		putchar(symbol); //тут же выводим нажатый символ
		if ((symbol == ' ' || symbol == 13) && prev_symbol != ' ') //если текущий символ Пробел или Enter, и предыдущий НЕ Пробел, то слово только что закончилось
		{
			if (!flag) //если не нашли ни одного повторения символов в рабочем слове
				count++; //увеличиваем количество слов с неповторяющимися символами
			flag = 0; //сбрасываем флаг независимо от того, нашли или не нашли, т.к. слово закончилось и мы ждем нового
			string[0] = '\0'; //обнуляем рабочее слово, т.е присваиваем первому символу символ конца строки
			prev_symbol = symbol; //запомним введенный символ в качестве предыдущего
		}
		else if (symbol != ' ') //если же текущий символ не пробел...
		{
			i = 0; //начинаем просмотр рабочего слова с нулевой позиции (в си массивы нумеруются с нуля)
			do
			{
				if (string[i] == symbol) flag = 1; //если введенный символ совпадает с текущим символом рабочего слова, то устанавливаем флаг
				i++;  //следующий символ рабочего слова
			} while (string[i - 1] != '\0'); //пока не наткнемся на символ конца строки
			string[i-1] = symbol; //присваиваем последнему символу рабочего слова введенный символ
			string[i] = '\0'; //а символ конца строки сдвигаем на одну позицию дальше в рабочем слове
			prev_symbol = symbol; //запомним введенный символ в качестве предыдущего
		}
	} while (symbol != 13); //пока не нажата клавиша Enter (13-её код)
	putchar('\n'); //перевод курсора на другую строку
	putchar('\n'); //еще раз
	printf("Number of words with duplicate characters: %d\n", count); //вывод результата
	system("pause"); //ждем нажатия любой кнопки
}
